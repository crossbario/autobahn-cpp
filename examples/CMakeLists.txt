include_directories(${CMAKE_SOURCE_DIR} ${Boost_INCLUDE_DIRS} ${OPENSSL_INCLUDE_DIR} ${Websocketpp_INCLUDE_DIRS} ${Msgpack_INCLUDE_DIRS})
link_libraries(${Boost_LIBRARIES} ${OPENSSL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})

set(PARAMETERS_SOURCES parameters.cpp)
set(PARAMETERS_HEADERS parameters.hpp)
add_library(examples_parameters ${PARAMETERS_SOURCES} ${PARAMETERS_HEADERS})

set(CALLER_SOURCES caller.cpp)
set(CALLEE_SOURCES callee.cpp)
set(PROVIDE_PREFIX_SOURCES callee.cpp)
set(PUBLISHER_SOURCES publisher.cpp)
set(SUBSCRIBER_SOURCES subscriber.cpp)
set(WAMPCRA_SOURCES wampcra.cpp)
set(UDS_SOURCES uds.cpp)
set(WEBSOCKET_CALLEE_SOURCES websocket_callee.cpp)

add_executable(caller ${CALLER_SOURCES} ${PUBLIC_HEADERS})
add_executable(callee ${CALLEE_SOURCES} ${PUBLIC_HEADERS})
add_executable(provide_prefix ${PROVIDE_PREFIX_SOURCES} ${PUBLIC_HEADERS})
add_executable(publisher ${PUBLISHER_SOURCES} ${PUBLIC_HEADERS})
add_executable(subscriber ${SUBSCRIBER_SOURCES} ${PUBLIC_HEADERS})
add_executable(wampcra ${WAMPCRA_SOURCES} ${PUBLIC_HEADERS})
add_executable(websocket_callee ${WEBSOCKET_CALLEE_SOURCES} ${PUBLIC_HEADERS})

if(NOT MSVC)
  add_executable(uds ${UDS_SOURCES} ${PUBLIC_HEADERS})
  target_link_libraries(uds examples_parameters)
  set(crypto_librariees crypto ssl)
endif()

target_link_libraries(caller examples_parameters)
target_link_libraries(callee examples_parameters)
target_link_libraries(provide_prefix examples_parameters)
target_link_libraries(publisher examples_parameters)
target_link_libraries(subscriber examples_parameters)
target_link_libraries(wampcra examples_parameters ${crypto_libraries})
target_link_libraries(websocket_callee examples_parameters ${crypto_libraries})
